@{	
    IReadOnlyList<IDocument> children = Model.GetChildren();
    if(children != null && children.Count > 0)
    {
        IList<IGrouping<string, IDocument>> categoryGroups = 
            children
                .GroupBy(x => x.GetTitle()/*TODO:x.GetString(WebKeys.Category)*/)
                .OrderBy(x => x.Key)
                .ToList();
	
        foreach(IGrouping<string, IDocument> categoryGroup in categoryGroups)
        {
            <div class="box">
                <div class="box-body no-padding">
                    <table class="table table-striped table-hover two-cols-alt table-responsive">
                        @if(!string.IsNullOrWhiteSpace(categoryGroup.Key))
                        {
                            <thead>
                            <tr class="active"><th colspan="2">@categoryGroup.Key</th></tr>
                            </thead>
                        }
						
                        <tbody>
                        @foreach(IDocument child in categoryGroup
                            .OrderBy(x => x.GetInt(Keys.Order, 1000))
                            .ThenBy(x => x.GetTitle()))
                        {
                            object[] childTreePath = child.Get<object[]>(Keys.TreePath);
                            <tr>
                                <td><strong><a href="@Context.GetLink(child)">@(child.GetTitle()))</a></strong></td>
                                <td>
                                    @{
                            if(child.ContainsKey(WebKeys.Description))
                            {
                                <text>@(child.GetString(WebKeys.Description))</text>
                            }					
                                    }
                                </td>
                            </tr>
                        }
                        </tbody>				
                    </table>
                </div>
            </div> 
        }
    }
}