@model IEnumerable<IDocument>

@{
    var extensionType = new List<string> { "Addin" };

    var extensions =
        Model
            .Where(x =>
                x.String("Type") != null &&
                extensionType.Any(y => y.Equals(x.String("Type"), StringComparison.OrdinalIgnoreCase)))
            .OrderBy(x => x.String("Name"))
            .ToList();
}

<div class="alert alert-info">
    <i class="fa fa-bug" style="margin-right:20px;" aria-hidden="true"></i>If you want to file an issue for any extension listed here please contact the author of the extension.<br/>
    <i class="fa fa-hand-pointer-o" style="margin-right:20px;" aria-hidden="true"></i>If you have requests for additional addins <a href="https://github.com/cake-build/cake/discussions?discussions_q=category%3A%22Extension+requests%22" target="_blank">start a discussion</a>.<br/>
    <i class="fa fa-plus" style="margin-right:20px;" aria-hidden="true"></i>If you are an extension author and want to have your extension listed, follow the <a href="https://github.com/cake-build/website/blob/master/README.md#extensions" target="_blank">instructions</a>.<br/>
</div>

<section id="extensions">

    <input id="search" type="text" class="search" aria-label="Enter extensions to search" placeholder="Search for extensions..." autocomplete="off" value>

    <div class="form-group row">
        <label class="col-sm-1 col-form-label">Sort by</label>
        <div class="col-sm-10">
            <button class="sort btn btn-default asc" data-sort="name">Name</button>
            <button class="sort btn btn-default" data-sort="analyzedpackagepublishdate" data-default-order="desc">Publish Date</button>
        </div>
    </div>

    <div class="row no-margin">
        <div id="result-count" class="col-md-10 no-padding">
            @extensions.Count() extensions found
        </div>
    </div>

    @Html.Partial("_ExtensionsList", extensions)
</section>

<script src="//cdnjs.cloudflare.com/ajax/libs/list.js/1.5.0/list.min.js"></script>
<script>
    var options = {
      valueNames: [
        { data: ['name'] },
        { data: ['analyzedpackagepublishdate'] },
        { data: ['categories'] }
      ]
    };

    var extensionList = new List('extensions', options);

    extensionList.on('searchComplete', function() {
        document.getElementById("result-count").innerHTML = extensionList.update().matchingItems.length + " extensions found";
    });
</script>